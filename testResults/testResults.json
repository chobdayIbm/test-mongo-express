{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-21T05:24:09.720Z",
    "end": "2020-05-21T05:24:10.999Z",
    "duration": 1279,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "00480782-e174-496d-a7c8-02d0dd9526c0",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook: Runs before all tests suites",
          "fullTitle": "\"before all\" hook: Runs before all tests suites",
          "timedOut": false,
          "duration": 89,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "console.log(`Tests start at ${new Date()}`);\nawait _common.mongoHelper.start();",
          "err": {},
          "uuid": "dad58223-35ad-4876-a082-aed6746fe193",
          "parentUUID": "00480782-e174-496d-a7c8-02d0dd9526c0",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook: Runs after all tests suites",
          "fullTitle": "\"after all\" hook: Runs after all tests suites",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "console.log(`Tests end at ${new Date()}`);",
          "err": {},
          "uuid": "86332b4e-2c60-4ecc-b3b2-47c81e732228",
          "parentUUID": "00480782-e174-496d-a7c8-02d0dd9526c0",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook",
          "fullTitle": "\"after each\" hook",
          "timedOut": false,
          "duration": 7,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await _common.mongoHelper.cleanup();",
          "err": {},
          "uuid": "08d28cc2-9865-4e5a-a335-b2925ad02d15",
          "parentUUID": "00480782-e174-496d-a7c8-02d0dd9526c0",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "466ba33d-6993-4162-820e-5b92390b28c7",
          "title": "Alternate Flow",
          "fullFile": "/Users/colinhobday/project/bendigo/legacy-mongoose/test/alt.spec.js",
          "file": "/test/alt.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Alternate Flow \"before each\" hook",
              "timedOut": false,
              "duration": 108,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require('../src/index');\n_common.mongoHelper.createDoc('policies', _testObjects.policy1);\n_common.mongoHelper.createDoc('claims', _testObjects.claim1);",
              "err": {},
              "uuid": "b836e947-0a86-4e21-a4d9-f2be990a62a1",
              "parentUUID": "466ba33d-6993-4162-820e-5b92390b28c7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "can get all policy",
              "fullTitle": "Alternate Flow can get all policy",
              "timedOut": false,
              "duration": 1069,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await (0, _supertest.default)(server).get(`/policies`);\nresponse.status.should.equal(200);\nObject.keys(response.body).should.be.eqls(['0']);\n(0, _match.default)(_testObjects.policy1, response.body[\"0\"], '_id');\nreturn response;",
              "err": {},
              "uuid": "d0f02a3f-3eb8-48a6-9bdd-449c2fa419f3",
              "parentUUID": "466ba33d-6993-4162-820e-5b92390b28c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d0f02a3f-3eb8-48a6-9bdd-449c2fa419f3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1069,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportTitle": "Test Results",
        "reportPageTitle": "Test Results",
        "reportDir": "testResults",
        "reportFilename": "testResults",
        "charts": "true",
        "autoOpen": "true"
      },
      "version": "5.1.0"
    }
  }
}