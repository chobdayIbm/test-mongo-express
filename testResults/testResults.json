{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-20T10:54:40.098Z",
    "end": "2020-05-20T10:54:40.971Z",
    "duration": 873,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "afe7d01b-12bc-4b7f-a819-e7b0f9041ac7",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook: Runs before all tests suites",
          "fullTitle": "\"before all\" hook: Runs before all tests suites",
          "timedOut": false,
          "duration": 94,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "console.log(`Tests start at ${new Date()}`);\nawait _common.mongoHelper.start();",
          "err": {},
          "uuid": "29745802-a13b-4d44-ae56-ad33ecff5b78",
          "parentUUID": "afe7d01b-12bc-4b7f-a819-e7b0f9041ac7",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook: Runs after all tests suites",
          "fullTitle": "\"after all\" hook: Runs after all tests suites",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "console.log(`Tests end at ${new Date()}`);",
          "err": {},
          "uuid": "c2f2af84-5951-401e-904b-5a81526c7b3e",
          "parentUUID": "afe7d01b-12bc-4b7f-a819-e7b0f9041ac7",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "6f78f33b-867b-42d5-88c9-a1af1171748a",
          "title": "Main Flow",
          "fullFile": "/Users/colinhobday/project/bendigo/legacy-mongoose/test/main.spec.js",
          "file": "/test/main.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Main Flow \"before all\" hook",
              "timedOut": false,
              "duration": 23,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await _common.rabbitMqHelper.start();",
              "err": {},
              "uuid": "54fdde86-3a66-43d7-a931-c3a382a31991",
              "parentUUID": "6f78f33b-867b-42d5-88c9-a1af1171748a",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Main Flow \"before each\" hook",
              "timedOut": false,
              "duration": 152,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require('../src/index');\n_common.mongoHelper.createDoc('policies', policy1);",
              "err": {},
              "uuid": "d0adb1b9-d39d-4fa4-af9e-16bc86b6e9b8",
              "parentUUID": "6f78f33b-867b-42d5-88c9-a1af1171748a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Main Flow \"after all\" hook",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_common.rabbitMqHelper.close();",
              "err": {},
              "uuid": "8a1445cb-be47-4c21-beae-6e27c217f2bd",
              "parentUUID": "6f78f33b-867b-42d5-88c9-a1af1171748a",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Main Flow \"after each\" hook",
              "timedOut": false,
              "duration": 6,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await _common.mongoHelper.cleanup();",
              "err": {},
              "uuid": "16158940-8774-4a83-b86c-d1cd88a7b4e7",
              "parentUUID": "6f78f33b-867b-42d5-88c9-a1af1171748a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "can create a claim",
              "fullTitle": "Main Flow can create a claim",
              "timedOut": false,
              "duration": 589,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const messages = [];\nawait _common.rabbitMqHelper.setupListener('claim_audit', 'direct', 'claim', messages);\nconst response = await (0, _supertest.default)(server).post('/claims').send(claim1).set('Accept', 'application/json');\nconst claimNumber = response.body.claimNumber;\nresponse.status.should.equal(201);\nconst dbRecord = await _common.mongoHelper.findOne('claims', {\n  claimNumber: claimNumber\n});\nclaim1.description.should.eql(dbRecord.description);\nclaim1.policyNumber.should.eql(dbRecord.policyNumber);\ndbRecord.issues.length.should.equals(1);\n(0, _match.default)(claim1.issues[0], dbRecord.issues[0], '_id');\nmessages.length.should.equals(1);\nmessages[0].description.should.eql(dbRecord.description);\nmessages[0].policyNumber.should.eql(dbRecord.policyNumber);\nmessages[0].issues.length.should.equals(1);\n(0, _match.default)(messages[0].issues[0], dbRecord.issues[0], '_id');\nreturn response;",
              "err": {},
              "uuid": "e9c39231-0c31-4864-ba47-6fe9e3afac0e",
              "parentUUID": "6f78f33b-867b-42d5-88c9-a1af1171748a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e9c39231-0c31-4864-ba47-6fe9e3afac0e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 589,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportTitle": "Test Results",
        "reportPageTitle": "Test Results",
        "reportDir": "testResults",
        "reportFilename": "testResults",
        "charts": "true",
        "autoOpen": "true"
      },
      "version": "5.1.0"
    }
  }
}