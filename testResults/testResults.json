{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-21T03:37:59.690Z",
    "end": "2020-05-21T03:38:00.543Z",
    "duration": 853,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d8bbf347-dc6d-439c-a636-c02459ac1c17",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook: Runs before all tests suites",
          "fullTitle": "\"before all\" hook: Runs before all tests suites",
          "timedOut": false,
          "duration": 92,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "console.log(`Tests start at ${new Date()}`);\nawait _common.mongoHelper.start();",
          "err": {},
          "uuid": "9b08c01c-f97e-4c58-91ae-56e877a199c5",
          "parentUUID": "d8bbf347-dc6d-439c-a636-c02459ac1c17",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook: Runs after all tests suites",
          "fullTitle": "\"after all\" hook: Runs after all tests suites",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "console.log(`Tests end at ${new Date()}`);",
          "err": {},
          "uuid": "f04ff71b-b305-4df0-b19b-47edcd77cda8",
          "parentUUID": "d8bbf347-dc6d-439c-a636-c02459ac1c17",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "ca7343ea-0723-4862-8de8-a4d88e7d47fa",
          "title": "Main Flow",
          "fullFile": "/Users/colinhobday/project/bendigo/legacy-mongoose/test/main.spec.js",
          "file": "/test/main.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Main Flow \"before all\" hook",
              "timedOut": false,
              "duration": 22,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await _common.rabbitMqHelper.start();",
              "err": {},
              "uuid": "16045342-ed4a-479e-b5a5-1af57d404bfe",
              "parentUUID": "ca7343ea-0723-4862-8de8-a4d88e7d47fa",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Main Flow \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require('../src/index');\n_common.mongoHelper.createDoc('policies', policy1);",
              "err": {},
              "uuid": "7b4cc77a-f1cb-4ab2-941e-cc915f245553",
              "parentUUID": "ca7343ea-0723-4862-8de8-a4d88e7d47fa",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Main Flow \"after all\" hook",
              "timedOut": false,
              "duration": 7,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await _common.rabbitMqHelper.close();",
              "err": {},
              "uuid": "1999b247-4cbb-4cf6-b23a-bb39227b9e64",
              "parentUUID": "ca7343ea-0723-4862-8de8-a4d88e7d47fa",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Main Flow \"after each\" hook",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await _common.mongoHelper.cleanup();",
              "err": {},
              "uuid": "924d2406-659e-47b8-b110-c0e5ef4935b5",
              "parentUUID": "ca7343ea-0723-4862-8de8-a4d88e7d47fa",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "can view a policy",
              "fullTitle": "Main Flow can view a policy",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await (0, _supertest.default)(server).get(`/policies/${policy1.policyNumber}`);\nresponse.status.should.equal(200);\n(0, _match.default)(policy1, response.body, '_id');\nreturn response;",
              "err": {},
              "uuid": "f2b7d220-c592-42e3-b9dc-beb3596c638e",
              "parentUUID": "ca7343ea-0723-4862-8de8-a4d88e7d47fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can create a claim",
              "fullTitle": "Main Flow can create a claim",
              "timedOut": false,
              "duration": 573,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const messages = [];\nawait _common.rabbitMqHelper.setupListener('claim_audit', 'direct', 'claim', messages);\nconst response = await (0, _supertest.default)(server).post('/claims').send(claim1).set('Accept', 'application/json');\nconst claimNumber = response.body.claimNumber;\nresponse.status.should.equal(201); // Verify that the claim is saved in database\nconst dbRecord = await _common.mongoHelper.findOne('claims', {\n  claimNumber: claimNumber\n});\nclaim1.description.should.eql(dbRecord.description);\nclaim1.policyNumber.should.eql(dbRecord.policyNumber);\ndbRecord.issues.length.should.equals(1);\n(0, _match.default)(claim1.issues[0], dbRecord.issues[0], '_id'); // Verify that the claim is sent to the audit queue\nmessages.length.should.equals(1);\nmessages[0]._id.should.eql(dbRecord._id.toString());\nmessages[0].description.should.eql(dbRecord.description);\nmessages[0].policyNumber.should.eql(dbRecord.policyNumber);\nmessages[0].issues.length.should.equals(1);\n(0, _match.default)(messages[0].issues[0], dbRecord.issues[0], '_id');\nreturn response;",
              "err": {},
              "uuid": "412f750b-7a99-4e0e-b5a1-2a74ee89a07d",
              "parentUUID": "ca7343ea-0723-4862-8de8-a4d88e7d47fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can view a claim",
              "fullTitle": "Main Flow can view a claim",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  _id\n} = await _common.mongoHelper.createDoc('claims', claim1);\nconst response = await (0, _supertest.default)(server).get(`/claims?claimNumber=${_id}`);\nresponse.status.should.equal(200);\n(0, _match.default)(claim1, response.body[0], '_id');\nreturn response;",
              "err": {},
              "uuid": "c199d8a4-18eb-43d8-9623-2f34586e27db",
              "parentUUID": "ca7343ea-0723-4862-8de8-a4d88e7d47fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2b7d220-c592-42e3-b9dc-beb3596c638e",
            "412f750b-7a99-4e0e-b5a1-2a74ee89a07d",
            "c199d8a4-18eb-43d8-9623-2f34586e27db"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 622,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "175e329f-7ab1-45ec-af97-631fa1e11e9f",
          "title": "Test infrastructure",
          "fullFile": "/Users/colinhobday/project/bendigo/legacy-mongoose/test/root.spec.js",
          "file": "/test/root.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "is running",
              "fullTitle": "Test infrastructure is running",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await new Promise((resolve, reject) => resolve());\nreturn result;",
              "err": {},
              "uuid": "12c3c131-9062-4e4a-9c5e-deaa51d0ffbf",
              "parentUUID": "175e329f-7ab1-45ec-af97-631fa1e11e9f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "12c3c131-9062-4e4a-9c5e-deaa51d0ffbf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportTitle": "Test Results",
        "reportPageTitle": "Test Results",
        "reportDir": "testResults",
        "reportFilename": "testResults",
        "charts": "true",
        "autoOpen": "true"
      },
      "version": "5.1.0"
    }
  }
}